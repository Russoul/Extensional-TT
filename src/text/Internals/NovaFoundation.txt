//////////// Type Theory: Extensional MLTT /////////////
We have:
 * Empty type: 𝟘
 * Unit type: 𝟙
 * Natural numbers type: ℕ
 * Dependent product type: Π
 * Dependent sum type: Σ
 * Equality type: (≡) with reflection
 * A universe: 𝕌


/////////////// Notes /////////////////

* We don't define definitional equality relation and then quotient types by it. Instead we simply reuse equality of the meta-theory

* Sometimes we use named substitution syntax / implicit weakening in the presentation

* //Abuse of notation:
  Σ (Γ ⊦ x : A) means Σ (x : (Γ ⊦ A))
  Σ (Γ ⊦ x ≔ a : A) means Σ (x : (Γ ⊦ a : A))

/////// Judgement forms /////////

Σ sig

Σ ⊦ E entry

Σ ⊦ E entry
-----------
Σ ⊦ e : E

Σ₀ sig
Σ₁ sig
-----------
σ : Σ₀ ⇒ Σ₁

Σ ⊦ Γ ctx

Σ ⊦ Γ ctx
Σ ⊦ Δ ctx
-------------
Σ ⊦ σ : Γ ⇒ Δ

Σ ⊦ Γ ctx
------------
Σ Γ ⊦ A type

Σ ⊦ Γ ctx
-----------
Σ Γ ⊦ Δ tel

Σ Γ ⊦ A type
------------
Σ Γ ⊦ a : A

Σ Γ ⊦ Δ tel
-----------
Σ Γ ⊦ ē : Δ

///////// Inference rules (sig) //////////

ε sig

Σ sig
Σ ⊦ E entry
-------------
Σ (x : E) sig

///////// Inference rules (sig entry) //////////

Σ sig
Σ Γ ⊦ A type
-----------------
Σ ⊦ (Γ ⊦ A) entry

Σ sig
Σ Γ ⊦ a : A
---------------------
Σ ⊦ (Γ ⊦ a : A) entry

Σ₀ sig
Σ₁ sig
σ : Σ₀ ⇒ Σ₁
Σ₁ ⊦ E entry
-----------------------------------------  //Defined by meta-level induction
Σ₀ ⊦ E(σ) entry
     (Γ ⊦ A)(σ) = Γ(σ) ⊦ A(σ)
     (Γ ⊦ a : A)(σ) = Γ(σ) ⊦ a(σ) : A(σ)

///////// Inference rules (sig entry instance) //////////

Σ sig
Σ Γ ⊦ A type
Σ Γ ⊦ a : A type
-----------------
Σ ⊦ γ.a : (Γ ⊦ A)

Σ sig
Σ Γ ⊦ a : A
-------------------
Σ ⊦ _ : (Γ ⊦ a : A)

Σ₁ ⊦ E entry
Σ₁ ⊦ e : E
σ : Σ₀ ⇒ Σ₁
--------------------------------------- //Defined by meta-level induction
Σ₀ ⊦ e(σ) : E(σ)
     (γ.a)(σ) = γ. a(σ) : (Γ(σ) ⊦ A(σ))
     _(σ) = _ : (Γ(σ) ⊦ a(σ) : A(σ))

///////// Inference rules (sig substitution) //////////

Σ sig
---------
· : Σ ⇒ ε

σ : Σ₀ ⇒ Σ₁
Σ₁ ⊦ E entry
Σ₀ ⊦ e : E(σ)
----------------------
σ, e : Σ₀ ⇒ Σ₁ (x : E)

τ : Σ₀ ⇒ Σ₁
σ : Σ₁ ⇒ Σ₂
---------------
σ ∘ τ : Σ₀ ⇒ Σ₂

Σ ⊦ E entry
-----------------
↑ : Σ (x : E) ⇒ Σ

Σ sig
----------
id : Σ ⇒ Σ

σ : Σ ⇒ ε
-------------
σ = · : Σ ⇒ ε

σ : Σ₀ ⇒ Σ₁
--------------------
id ∘ σ = σ : Σ₀ ⇒ Σ₁

σ : Σ₀ ⇒ Σ₁
--------------------
σ ∘ id = σ : Σ₀ ⇒ Σ₁

σ₁₀ : Σ₁ ⇒ Σ₀
σ₂₁ : Σ₂ ⇒ Σ₁
σ₃₂ : Σ₃ ⇒ Σ₂
-----------------------------------------------
σ₁₀ ∘ (σ₂₁ ∘ σ₃₂) = (σ₁₀ ∘ σ₂₁) ∘ σ₃₂ : Σ₃ ⇒ Σ₀

σ : Σ₁ ⇒ Σ₀
Σ₀ ⊦ E entry
Σ₁ ⊦ e : E(σ)
----------------------------
↑ ∘ (σ, e) = σ : Σ₁ ⇒ Σ₀

τ : Σ₀ ⇒ Σ₁
σ : Σ₁ ⇒ Σ₂
Σ₂ ⊦ E entry
Σ₁ ⊦ e : E(σ)
--------------------------------------------
(σ, e) ∘ τ = (σ ∘ τ, e(τ)) : Σ₀ ⇒ Σ₂ (x : E)


///////// Inference rules (ctx) //////////

Σ ⊦ ε ctx

Σ ⊦ Γ ctx
Σ Γ ⊦ A type
-----------------
Σ ⊦ Γ (x : A) ctx

σ : Σ₀ ⇒ Σ₁
Γ₁ ⊦ Γ ctx
--------------- //Defined by meta-level induction on Γ
Σ₀ ⊦ Γ(σ) ctx
     ε(σ) ≔ ε
     (Γ (x : A))(σ) ≔ Γ(σ) (x : A(σ))

///////// Inference rules (ctx substitution) //////////

Σ ⊦ Γ ctx
-------------
Σ ⊦ · : Γ ⇒ ε

Σ ⊦ Γ ctx
--------------
Σ ⊦ id : Γ ⇒ Γ

Σ ⊦ Γ (x : A) ctx
---------------------
Σ ⊦ ↑ : Γ (x : A) ⇒ Γ

Σ ⊦ σ : Δ ⇒ Γ
Σ ⊦ τ : Ξ ⇒ Δ
-----------------
Σ ⊦ σ ∘ τ : Ξ ⇒ Γ

Σ ⊦ σ : Δ ⇒ Γ
Σ Γ ⊦ A type
Σ Δ ⊦ t : A(σ)
------------------------
Σ ⊦ σ, t : Δ ⇒ Γ (x : A)

σ : Σ₀ ⇒ Σ₁
Σ₁ ⊦ τ : Γ ⇒ Δ
-----------------------
Σ₀ ⊦ τ(σ) : Γ(σ) ⇒ Δ(σ)

Σ ⊦ Γ ctx
Σ ⊦ σ : Γ ⇒ ε
-----------------
Σ ⊦ σ = · : Γ ⇒ ε

Σ ⊦ σ : Γ ⇒ Δ
----------------------
Σ ⊦ σ ∘ id = σ : Γ ⇒ Δ

Σ ⊦ σ : Γ ⇒ Δ
----------------------
Σ ⊦ id ∘ σ = σ : Γ ⇒ Δ

Σ ⊦ σ₁₀ : Γ₁ ⇒ Γ₀
Σ ⊦ σ₂₁ : Γ₂ ⇒ Γ₁
Σ ⊦ σ₃₂ : Γ₃ ⇒ Γ₂
---------------------------------------------------
Σ ⊦ σ₁₀ ∘ (σ₂₁ ∘ σ₃₂) = (σ₁₀ ∘ σ₂₁) ∘ σ₃₂ : Γ₃ ⇒ Γ₀

Σ ⊦ σ : Δ ⇒ Γ
Σ Γ ⊦ A type
Σ Δ ⊦ t : A(σ)
--------------------------
Σ ⊦ ↑ ∘ (σ, t) = σ : Δ ⇒ Γ

Σ ⊦ τ : Γ₀ ⇒ Γ₁
Σ ⊦ σ : Γ₁ ⇒ Γ₂
Σ Γ₂ ⊦ A type
Σ Γ₁ ⊦ t : A(σ)
------------------------------------------------
Σ ⊦ (σ, t) ∘ τ = (σ ∘ τ, t(τ)) : Γ₀ ⇒ Γ₂ (x : A)

///////// Inference rules (type) //////////

Σ Γ ⊦ 𝟘 type

Σ Γ ⊦ 𝟙 type

Σ Γ ⊦ ℕ type

Σ Γ ⊦ 𝕌 type

Σ Γ ⊦ A : 𝕌
---------------
Σ Γ ⊦ El A type

Σ Γ ⊦ A type
Σ Γ (x : A) ⊦ B type
----------------------
Σ Γ ⊦ (x : A) → B type

Σ Γ ⊦ A type
Σ Γ (x : A) ⊦ B type
----------------------
Σ Γ ⊦ (x : A) ⨯ B type

Σ Γ ⊦ A type
Σ Γ ⊦ a₀ : A
Σ Γ ⊦ a₁ : A
------------------------
Σ Γ ⊦ (a₀ ≡ a₁ ∈ A) type

Σ₁ Γ ⊦ A type
σ : Σ₀ ⇒ Σ₁
-------------------
Σ₀ Γ(σ) ⊦ A(σ) type

Σ Γ ⊦ A type
Σ ⊦ σ : Δ ⇒ Γ
---------------
Σ Δ ⊦ A(σ) type

Σ Γ ⊦ El 𝟘 = ℕ type

Σ Γ ⊦ El 𝟙 = ℕ type

Σ Γ ⊦ El ℕ = ℕ type

Σ Γ ⊦ El 𝕌 = 𝕌 type

Σ Γ ⊦ A : 𝕌
Σ Γ (El A) ⊦ B : 𝕌
-------------------------------------------------
Σ Γ ⊦ El ((x : A) → B) = (x : El A) → (El B) type

Σ Γ ⊦ A : 𝕌
Σ Γ (El A) ⊦ B : 𝕌
-------------------------------------------------
Σ Γ ⊦ El ((x : A) ⨯ B) = (x : El A) ⨯ (El B) type

Σ Γ ⊦ A : 𝕌
Σ Γ ⊦ a₀ : El A
Σ Γ ⊦ a₁ : El A
---------------------------------------------
Σ Γ ⊦ El(a₀ ≡ a₁ ∈ A) = (a₀ ≡ a₁ ∈ El A) type

Σ ⊦ σ : Δ ⇒ Γ
---------------------
Σ Δ ⊦ 𝟘(σ) = ℕ type

Σ ⊦ σ : Δ ⇒ Γ
---------------------
Σ Δ ⊦ 𝟙(σ) = ℕ type

Σ ⊦ σ : Δ ⇒ Γ
---------------------
Σ Δ ⊦ ℕ(σ) = ℕ type

Σ ⊦ σ : Δ ⇒ Γ
---------------------
Σ Δ ⊦ 𝕌(σ) = 𝕌 type

Σ ⊦ σ : Δ ⇒ Γ
Σ Γ ⊦ A type
---------------------------------
Σ ⊦ σ⁺ : Δ (x : A(σ)) ⇒ Γ (x : A)
    σ⁺ ≔ σ ∘ ↑, x₀

Σ ⊦ σ : Δ ⇒ Γ
------------------------------------
Σ Δ ⊦ (Π A B)(σ) = Π A B(σ⁺(A)) type

Σ ⊦ σ : Δ ⇒ Γ
------------------------------------
Σ Δ ⊦ (Σ A B)(σ) = Σ A B(σ⁺(A)) type

Σ ⊦ σ : Δ ⇒ Γ
----------------------------------------------------
Σ Δ ⊦ (a₀ ≡ a₁ ∈ A)(σ) = (a₀(σ) ≡ a₁(σ) ∈ A(σ)) type

Σ ⊦ σ : Δ ⇒ Γ
Σ ⊦ τ : Ξ ⇒ Δ
-------------------------------
Σ Ξ ⊦ A(σ)(τ) = A(σ ∘ τ) type


///////// Inference rules (tel) //////////

Σ ⊦ Γ ctx
-----------
Σ Γ ⊦ ε tel

Σ Γ A ⊦ Δ tel
-------------------
Σ Γ ⊦ (x : A) Δ tel

σ : Σ₀ ⇒ Σ₁
Σ₁ Γ ⊦ Δ tel
------------------  //Defined by meta-level induction
Σ₀ Γ(σ) ⊦ Δ(σ) tel
          ε(σ) = ε
          ((x : A) Δ)(σ) = (x : A(σ)) Δ(σ)

Σ ⊦ σ : Γ₀ ⇒ Γ₁
Σ Γ₁ ⊦ Δ tel
------------------  //Defined by meta-level induction
Σ Γ₀ ⊦ Δ(σ) tel
       ε(σ) = ε
       ((x : A) Δ)(σ) = (x : A(σ)) Δ(σ⁺)

///////// Inference rules (elem) //////////

Σ Γ ⊦ 𝟘 : 𝕌

Σ Γ ⊦ 𝟙 : 𝕌

Σ Γ ⊦ ℕ : 𝕌

Σ Γ ⊦ () : 𝟙

Σ Γ ⊦ Z : ℕ

Σ Γ ⊦ t : ℕ
-------------
Σ Γ ⊦ S t : ℕ

Σ Γ ⊦ A : 𝕌
Σ Γ (x : El A) ⊦ B : 𝕌
----------------------
Σ Γ ⊦ (x : A) → B : 𝕌

Σ Γ ⊦ A : 𝕌
Σ Γ (x : El A) ⊦ B : 𝕌
----------------------
Σ Γ ⊦ (x : A) ⨯ B : 𝕌

Σ Γ ⊦ A : 𝕌
Σ Γ ⊦ a₀ : El A
Σ Γ ⊦ a₁ : El A
-----------------------
Σ Γ ⊦ (a₀ ≡ a₁ ∈ A) : 𝕌

Σ Γ (x : A) ⊦ f : B
-------------------------
Σ Γ ⊦ x ↦ f : (x : A) → B

Σ Γ ⊦ f : (x : A) → B
Σ Γ ⊦ e : A
----------------------------------
Σ Γ ⊦ f e : B(e/x)

Σ Γ (x : A) ⊦ B type
Σ Γ ⊦ a : A
Σ Γ ⊦ b : B(a/x)
----------------------------
Σ Γ ⊦ a , b : (x : A) ⨯ B

Σ Γ ⊦ t : (x : A) ⨯ B
------------------------------
Σ Γ ⊦ t .π₁ : A

Σ Γ ⊦ t : (x : A) ⨯ B
--------------------------------------------------------
Σ Γ ⊦ t .π₂ : B((t : (x : A) ⨯ B).π₁ / x)

Σ Γ ⊦ a : A
------------------------
Σ Γ ⊦ Refl : (a ≡ a ∈ A)

------------------------
Σ Γ (x : 𝟘) ⊦ 𝟘-elim : A

Σ Γ (x : ℕ) ⊦ A type
Σ Γ ⊦ z : A(Z / x)
Σ Γ (x : ℕ) (h : A) ⊦ s : A(S x / x)
---------------------------------------
Σ Γ (x : ℕ) ⊦ ℕ-elim A z h.s : A(t / x)

-------------------
Σ Γ (x : A) ⊦ x : A

-----------------------
Σ (Γ ⊦ x : A) Γ ⊦ x : A

Σ Γ ⊦ t : A
Σ ⊦ σ : Δ ⇒ Γ
-----------------
Σ Δ ⊦ t(σ) : A(σ)

Σ₁ Γ ⊦ t : A
σ : Σ₀ ⇒ Σ₁
---------------------
Σ₀ Γ(σ) ⊦ t(σ) : A(σ)

Σ Γ ⊦ t : 𝟙
----------------
Σ Γ ⊦ t = () : 𝟙

Σ Γ (x : A) ⊦ f : B
Σ Γ ⊦ e : A
---------------------------------------
Σ | Γ ⊦ (x ↦ f) e = f(e / x) : B(e / x)

Σ Γ ⊦ f : (x : A) → B
-------------------------------
Σ Γ ⊦ x ↦ f x = f : (x : A) → B

Σ Γ (x : A) ⊦ B type
Σ Γ ⊦ a : A
Σ Γ ⊦ b : B(a / x)
--------------------------
Σ Γ ⊦ (a, b) .π₁ = a : A

Σ Γ (x : A) ⊦ B type
Σ Γ ⊦ a : A
Σ Γ ⊦ b : B(a / x)
-------------------------------
Σ Γ ⊦ (a, b) .π₂ = b : B(a / x)

Σ Γ ⊦ t : (x : A) ⨯ B
---------------------------------------
Σ Γ ⊦ (t .π₁ , t .π₂) = t : (x : A) ⨯ B

Σ Γ ⊦ A ctx
Σ ⊦ σ : Δ ⇒ Γ
Σ Δ ⊦ t : A(σ)
-------------------------
Σ Δ ⊦ x₀(σ, t) = t : A(σ)

σ : Σ₀ ⇒ Σ₁
Σ₁ Γ ⊦ E ctx
Σ₀ Γ(σ) ⊦ t : A(σ)
-------------------------------
Σ₀ Γ(σ) ⊦ x₀(σ, γ.t) = t : A(σ)

Σ Γ ⊦ xᵢ : B
---------------------------
Σ Γ A ⊦ xᵢ(↑) = xᵢ₊₁ : B(↑)

Σ ⊦ σ : Δ ⇒ Γ
Σ ⊦ τ : Ξ ⇒ Δ
Σ Γ ⊦ A type
-----------------------------------
Σ Ξ ⊦ t(σ)(τ) = t(σ ∘ τ) : A(σ ∘ τ)

Σ Γ (x : ℕ) ⊦ A type
Σ Γ ⊦ z : A(Z / x)
Σ Γ (x : ℕ) (h : A) ⊦ s : A(S x / x)
-----------------------------------------
Σ Γ ⊦ ℕ-elim x.A z x.h.s Z = z : A(Z / x)

Σ Γ (x : ℕ) ⊦ A type
Σ Γ ⊦ z : A(Z / x)
Σ Γ (x : ℕ) (h : A) ⊦ s : A(S x / x)
Σ Γ ⊦ t : ℕ
------------------------------------------------------------------------
Σ Γ ⊦ ℕ-elim x.A z x.h.s (S t) = s(t, ℕ-elim x.A z x.h.s t) : A(S t / x)


Γ ⊦ a : a₀ ≡ a₁ ∈ A
--------------------          //
Γ ⊦ a₀ = a₁ : A               // Note: Those two rules are enough to derive J and its β and η rules
                              // Pretty sure (J, J-β, J-η) is equivalent to those rules.
Γ ⊦ a : a₀ ≡ a₁ ∈ A           //
----------------------------  //
Γ ⊦ a = Refl : (a₀ ≡ a₁ ∈ A)

///////// Inference rules (elem list) //////////

Σ Γ ⊦ · : ε

Σ Γ ⊦ Δ tel
Σ Γ ⊦ e : A
Σ Γ ⊦ ē : Δ(e / x)
---------------------
Σ Γ ⊦ e ē : (x : A) Δ

Σ Γ₁ ⊦ Δ tel
Σ Γ₁ ⊦ ē : Δ
Σ ⊦ σ : Γ₀ ⇒ Γ₁
---------------------------------------------- //Defined by meta-level induction
Σ Γ₀ ⊦ ē(σ) : Δ(σ)
       ·(σ) ≔ · : ε
       (e ē)(σ) ≔ e(σ) ē(σ) : (x : A(σ)) Δ(σ⁺)

Σ₁ Γ ⊦ Δ tel
Σ₁ Γ ⊦ ē : Δ
σ : Σ₀ ⇒ Σ₁
------------------------------------------------ //Defined by meta-level induction
Σ₀ Γ(σ) ⊦ ē(σ) : Δ(σ)
          ·(σ) ≔ · : ε
          (e ē)(σ) ≔ e(σ) ē(σ) : (x : A(σ)) Δ(σ)

Σ Γ ⊦ · = · : ε

Σ Γ ⊦ e₀ = e₁ : A
Σ Γ ⊦ ē₀ = ē₁ : Δ(e₀)
-------------------------------
Σ Γ ⊦ e₀ ē₀ = e₁ ē₁ : (x : A) Δ
