eMLTT formulated with extrinsic syntax and proof-relevant typing judgements.

We have:
 * Empty type: 𝟘
 * Unit type: 𝟙
 * Natural numbers type: ℕ
 * Dependent product type: Π
 * Dependent sum type: Σ
 * Equality type: (≡) with reflection
 * A countable tower of universes with an upper bound: 𝕌
 * Universe polymorphism
 * level, type and element holes

x̄ ::= ε | x̄ x

l m n k ::= ☐ | △ | l[σ] | l[γ] | ω

Λ ::= ε | Λ (x̄ ⊦ x) | Λ (x̄ ⊦ x ≔ l)

Ξ :: = ε | Ξ (x̄ ⊦ l < m)

Σ ::= ε | Σ (x̄ Γ ⊦ A) | Σ (x̄ Γ ⊦ a : A)

σ ::= · | σ, t | σ₂ ∘ σ₁ | id | ↑

Γ, Δ, Ξ ::= ε | Γ ᐅ A

γ, δ, ξ ::= · | γ, t | γ ∘ δ | id | ↑ | γ[σ]

A, B, C ::= [] A | A → B | A ⨯ B | 𝕌 l | ℕ | 𝟙 | 𝟘 | A[γ] | A[σ] | (a₀ ≡ a₁ ∈ A) | [x] A

a, b, c, t, f, e, p, z, s, l, r ::=
     a, b
   | λ f
   | Z
   | S t
   | ()
   | f e
   | f @ l
   | p .π₁
   | p .π₂
   | ℕ-elim z s t
   | 𝟘-elim
   | ☐
   | △
   | t[γ]
   | t[σ]
   | [x] t


//Judgements and terms are not in one-to-one correspondence!
//Judgements are strictly more fine-grained than terms because they contain equality-proofs and coercions!

/////// Judgement forms ///////

Λ lvl-sig

Λ₀ lvl-sig
Λ₁ lvl-sig
-----------
σ : Λ₀ ⇒ Λ₁

Λ lvl-sig
x̄ vars
ȳ vars
-------------
Λ ⊦ γ : x̄ ⇒ ȳ

Λ lvl-sig
x̄ vars
------------------
Λ x̄ ⊦ l finite-lvl

Λ lvl-sig
x̄ vars
---------------
Λ x̄ ⊦ l lvl

Λ lvl-sig
--------------------
Λ ⊦ Ξ lvl-constraint

Λ lvl-sig
---------
Λ ⊦ Σ sig

Λ ⊦ Σ₀ sig
Λ ⊦ Σ₁ sig
---------------
Λ ⊦ σ : Σ₀ ⇒ Σ₁

Λ ⊦ Σ sig
x̄ vars
-------------------
Λ Σ x̄ ⊦ Γ₀ = Γ₁ ctx

(Λ Σ x̄ ⊦ Γ ctx) := (Λ Σ x̄ ⊦ Γ = Γ ctx)

Λ Σ x̄ ⊦ Γ ctx
----------------------
Λ Σ x̄ Γ ⊦ A₀ = A₁ type

(Λ Σ x̄ Γ ⊦ A type) := (Λ Σ x̄ Γ ⊦ A = A type)

Λ Σ x̄ Γ ⊦ A type
---------------------
Λ Σ x̄ Γ ⊦ t₀ = t₁ : A

Λ Σ x̄ ⊦ Γ ctx
Λ Σ x̄ ⊦ Δ ctx
------------------------
Λ Σ x̄ ⊦ γ₀ = γ₁ : Γ ⇒ Δ

/////// Inferences rules ///////

/////// Level signature ///////

ε lvl-sig

Λ lvl-sig
x̄ vars
-----------------
Λ (x̄ ⊦ x) lvl-sig

Λ lvl-sig
x̄ vars
Λ x̄ ⊦ l lvl
---------------------
Λ (x̄ ⊦ x ≔ l) lvl-sig

/////// Level ///////

Λ x̄ ⊦ l finite-lvl
------------------
Λ x̄ ⊦ l lvl

-------------------
Λ (x̄ ⊦ x) x̄ ⊦ △ lvl

-----------------------
Λ (x̄ ⊦ x ≔ l) x̄ ⊦ △ lvl

--------------------
Λ x̄ x ⊦ ☐ finite-lvl

-----------
Λ x̄ ⊦ ω lvl

/////// Level Constraint ///////

Λ ⊦ ε lvl-constraint

Λ ⊦ Ξ lvl-constraint
Λ x̄ ⊦ l lvl
Λ x̄ ⊦ m lvl
--------------------------------
Λ ⊦ Ξ (x̄ ⊦ l < m) lvl-constraint

/////// Context ///////

Λ Σ x̄ ⊦ ε ctx

Λ Σ ⊦ Γ₀ = Γ₁ ctx
Λ Σ Γ₀ ⊦ A₀ = A₁ type
-------------------------------
Λ Σ ⊦ (Γ₀ ᐅ A₀) = (Γ₁ ᐅ A₁) ctx

Λ Σ ⊦ Γ₀ = Γ₁ ctx
-----------------
Λ Σ ⊦ Γ₁ = Γ₀ ctx

Λ Σ ⊦ Γ₀ = Γ₁ ctx
Λ Σ ⊦ Γ₁ = Γ₂ ctx
-----------------
Λ Σ ⊦ Γ₀ = Γ₂ ctx

/////// Signature ///////

Λ ⊦ ε sig

Λ ⊦ Σ₀ = Σ₁ sig
Λ Σ₀ x̄ ⊦ Γ₀ = Γ₁ ctx
Λ Σ₀ x̄ Γ₀ ⊦ A₀ = A₁ type
---------------------------------------
Λ ⊦ Σ₀ (x̄ Γ₀ ⊦ A₀) = Σ₁ (x̄ Γ₁ ⊦ A₁) sig

Λ ⊦ Σ₀ = Σ₁ sig
Λ Σ₀ x̄ ⊦ Γ₀ = Γ₁ ctx
Λ Σ₀ x̄ Γ₀ ⊦ A₀ = A₁ type
Λ Σ₀ x̄ Γ₀ ⊦ a₀ = a₁ : A₀
-------------------------------------------------
Λ ⊦ Σ₀ (x̄ Γ₀ ⊦ a₀ : A₀) = Σ₁ (x̄ Γ₁ ⊦ a₁ : A₁) sig

Λ ⊦ Σ₀ = Σ₁ sig
---------------
Λ ⊦ Σ₁ = Σ₀ sig

Λ ⊦ Σ₀ = Σ₁ sig
Λ ⊦ Σ₁ = Σ₂ sig
---------------
Λ ⊦ Σ₀ = Σ₂ sig

//////// Type ////////

Λ Σ x̄ Γ ⊦ A₀ = A₁ type
----------------------
Λ Σ x̄ Γ ⊦ A₁ = A₀ type

Λ Σ x̄ Γ ⊦ A₀ = A₁ type
Λ Σ x̄ Γ ⊦ A₁ = A₂ type
----------------------
Λ Σ x̄ Γ ⊦ A₀ = A₂ type

Λ Σ x̄ Γ ⊦ A₀ = A₁ type
Λ Σ x̄ (Γ ᐅ A₀) ⊦ B₀ = B₁ type
------------------------------------
Λ Σ x̄ Γ ⊦ (A₀ → B₀) = (A₁ → B₁) type

Λ Σ x̄ Γ ⊦ A₀ = A₁ type
Λ Σ x̄ (Γ ᐅ A₀) ⊦ B₀ = B₁ type
------------------------------------
Λ Σ x̄ Γ ⊦ (A₀ ⨯ B₀) = (A₁ ⨯ B₁) type

Λ Σ x̄ Γ ⊦ ℕ type

Λ Σ x̄ Γ ⊦ 𝟙 type

Λ Σ x̄ Γ ⊦ 𝟘 type

Λ x̄ ⊦ l lvl
------------------
Λ Σ x̄ Γ ⊦ 𝕌 l type

Λ Σ x̄ Γ ⊦ A : 𝕌 l
-----------------
Λ Σ x̄ Γ ⊦ A type

Λ Σ x̄ x Γ ⊦ A type
--------------------
Λ Σ x̄ Γ ⊦ [x] A type

Λ Σ x̄ Δ ⊦ A₀ = A₁ type
Λ Σ x̄ ⊦ δ₀ = δ₁ : Γ ⇒ Δ
------------------------------
Λ Σ x̄ Γ ⊦ A₀[δ₀] = A₁[δ₁] type

Λ Σ₁ x̄ Γ ⊦ A type
Λ ⊦ σ : Σ₀ ⇒ Σ₁
-----------------------
Λ Σ₀ x̄ Γ[σ] ⊦ A[σ] type

Λ Σ x̄ Γ ⊦ A₀ = A₁ type
Λ Σ x̄ Γ ⊦ l₀ = l₁ : A₀
Λ Σ x̄ Γ ⊦ r₀ = r₁ : A₀
----------------------------------------------
Λ Σ x̄ Γ ⊦ (l₀ ≡ r₀ ∈ A₀) = (l₁ ≡ r₁ ∈ A₁) type

Λ Σ x̄ ⊦ Γ₀ = Γ₁ ctx
Λ Σ x̄ Γ₀ ⊦ A type
--------------------       // Coercion is a "generator". I doubt it can be a definition
Λ Σ x̄ Γ₁ ⊦ A type          // with equality reflection present...

///////// Elem //////////

Λ Σ x̄ Γ ⊦ t₀ = t₁ : A
Λ Σ x̄ Γ ⊦ t₁ = t₂ : A
---------------------
Λ Σ x̄ Γ ⊦ t₀ = t₂ : A

Λ Σ x̄ Γ ⊦ t₀ = t₁ : A
---------------------
Λ Σ x̄ Γ ⊦ t₁ = t₀ : A

------------------------
Λ Σ x̄ (Γ ᐅ A) ⊦ ☐ : A[↑]

Λ Σ x̄ Γ ⊦ a₀ = a₁ : A
Λ Σ x̄ Γ ⊦ b₀ = b₁ : B[id, a₀]
-------------------------------------
Λ Σ x̄ Γ ⊦ (a₀, b₀) = (a₁, b₁) : A ⨯ B

Λ Σ x̄ (Γ ᐅ A) ⊦ f₀ = f₁ : B
-----------------------------
Λ Σ x̄ Γ ⊦ λ f₀ = λ f₁ : A → B

Λ Σ x̄ Γ ⊦ f₀ = f₁ : A → B
Λ Σ x̄ Γ ⊦ e₀ = e₁ : A
-----------------------------------
Λ Σ x̄ Γ ⊦ f₀ e₀ = f₁ e₀ : B[id, e₀]

Λ Σ x̄ Γ ⊦ p₀ : A ⨯ B
Λ Σ x̄ Γ ⊦ p₁ : A ⨯ B
-----------------------------
Λ Σ x̄ Γ ⊦ p₀ .π₁ = p₁ .π₁ : A

Λ Σ x̄ Γ ⊦ p₀ : A ⨯ B
Λ Σ x̄ Γ ⊦ p₁ : A ⨯ B
-----------------------------------------
Λ Σ x̄ Γ ⊦ p₀ .π₂ = p₁ .π₂ : B[id, p₀ .π₁]

-----------------
Λ Σ x̄ Γ ⊦ () : 𝟙

Λ Σ x̄ Γ ⊦ p : 𝟙
Λ Σ x̄ Γ ⊦ q : 𝟙
-------------------
Λ Σ x̄ Γ ⊦ p = q : 𝟙

Λ Σ x̄ Γ ctx
---------------
Λ Σ x̄ Γ ⊦ Z : ℕ

Λ Σ x̄ Γ ⊦ t₀ = t₁ : ℕ
-------------------------
Λ Σ x̄ Γ ⊦ S t₀ = S t₁ : ℕ

Λ Σ x̄ (Γ ᐅ ℕ) ⊦ A₀ = A₁ type
Λ Σ x̄ Γ ⊦ z₀ = z₁ : A₀[id, Z]
Λ Σ x̄ (Γ ᐅ ℕ ᐅ A) ⊦ s₀ = s₁ : A₀[↑², ☐[↑]]
Λ Σ x̄ Γ ⊦ t₀ = t₁ : ℕ
--------------------------------------------------------------
Λ Σ x̄ Γ ⊦ ℕ-elim A₀ z₀ s₀ t₀ = ℕ-elim A₁ z₁ s₁ t₁ : A₀[id, t₀]

Λ Σ x̄ (Γ ᐅ ℕ) ⊦ A type
Λ Σ x̄ Γ ⊦ z : A[id, Z]
Λ Σ x̄ (Γ ᐅ ℕ ᐅ A) ⊦ s : A[↑², ☐[↑]]
---------------------------------------
Λ Σ x̄ Γ ⊦ ℕ-elim A z s Z = z : A[id, S]

Λ Σ x̄ (Γ ᐅ ℕ) ⊦ A type
Λ Σ x̄ Γ ⊦ z : A[id, Z]
Λ Σ x̄ (Γ ᐅ ℕ ᐅ A) ⊦ s : A[↑², ☐[↑]]
Λ Σ x̄ Γ ⊦ t : ℕ
----------------------------------------------------------------
Λ Σ x̄ Γ ⊦ ℕ-elim A z s (S t) = s[t, ℕ-elim A z s t] : A[id, S t]

Λ Σ x̄ Γ ⊦ t₀ = t₁ : 𝟘
-----------------------------------------
Λ Σ x̄ Γ ⊦ 𝟘-elim A₀ t₀ = 𝟘-elim A₁ t₁ : A

Λ Σ x̄ Δ ⊦ t₀ = t₁ : A
Λ Σ x̄ ⊦ δ₀ = δ₁ : Γ ⇒ Δ
---------------------------------
Λ Σ x̄ Γ ⊦ t₀[δ₀] = t₁[δ₁] : A[δ₀]

Λ Σ₁ x̄ Γ ⊦ t : A
Λ ⊦ σ : Σ₀ ⇒ Σ₁
-------------------------
Λ Σ₀ x̄ Γ[σ] ⊦ t[σ] : A[σ]


Λ Σ x̄ Γ ⊦ a : A
--------------------------
Λ Σ x̄ Γ ⊦ () : (a ≡ a ∈ A)

...
-------------------------
... ⊦ ☐ᵢ[↑] = ☐ᵢ₊₁ : ...


Λ Σ x̄ Γ ⊦ p : (a₀ ≡ a₁ ∈ A)
---------------------------
Λ Σ x̄ Γ ⊦ a₀ = a₁ ∈ A

Λ Σ x̄ Γ ⊦ p : (a ≡ a ∈ A)
--------------------------------
Λ Σ x̄ Γ ⊦ p = () ∈ (a ≡ a ∈ A)

Λ Σ x̄ Γ ⊦ f : [x] A
Λ x̄ ⊦ m finite-lvl
--------------------------
Λ Σ x̄ Γ ⊦ f @ m : A[id, m]

------------------------------------
Λ Σ (x̄ Γ ⊦ A type) x̄ Γ[↑] ⊦ △ : A[↑]

------------------------
Λ Σ x̄ (Γ ᐅ A) ⊦ ☐ : A[↑]

Λ Σ x̄ ⊦ Γ₀ = Γ₁ ctx
Λ Σ x̄ Γ₀ ⊦ A type
Λ Σ x̄ Γ₀ ⊦ t : A
-------------------
Λ Σ x̄ Γ₁ ⊦ t : A

Λ Σ x̄ Γ ⊦ A₀ = A₁ type
Λ Σ x̄ Γ ⊦ t : A₀
----------------------
Λ Σ x̄ Γ ⊦ t : A₁

Λ Σ x̄ Γ ⊦ A : 𝕌 l
Λ Σ x̄ (Γ ᐅ A) ⊦ B : U m
Λ x̄ ⊦ l < n
Λ x̄ ⊦ m < n
-----------------------
Λ Σ x̄ Γ ⊦ A → B : 𝕌 n

Λ Σ x̄ Γ ⊦ A : 𝕌 l
Λ Σ x̄ (Γ ᐅ A) ⊦ B : U m
Λ x̄ ⊦ l < n
Λ x̄ ⊦ m < n
-----------------------
Λ Σ x̄ Γ ⊦ A ⨯ B : 𝕌 n

-----------------
Λ Σ x̄ Γ ⊦ 𝟘 : 𝕌 n

-----------------
Λ Σ x̄ Γ ⊦ 𝟙 : 𝕌 n

-----------------
Λ Σ x̄ Γ ⊦ ℕ : 𝕌 n

Λ x̄ ⊦ l lvl
Λ x̄ ⊦ l < m
-------------------
Λ Σ x̄ Γ ⊦ 𝕌 l : 𝕌 m

Λ Σ x̄ x Γ ⊦ A : 𝕌 m
Λ x̄ x ⊦ m < l
---------------------
Λ Σ x̄ Γ ⊦ [x] A : 𝕌 l

///////// Signature Substitution //////////

Λ ⊦ σ = σ' : Σ₀ ⇒ Σ₁
----------------
Λ ⊦ σ' = σ : Σ₀ ⇒ Σ₁

Λ ⊦ σ  = σ'  : Σ₀ ⇒ Σ₁
Λ ⊦ σ' = σ'' : Σ₀ ⇒ Σ₁
-------------------
Λ ⊦ σ  = σ'' : Σ₀ ⇒ Σ₁

Λ ⊦ Σ sig
----------
Λ ⊦ id : Σ ⇒ Σ

Λ ⊦ σ₁ = σ₁' : Σ₀ ⇒ Σ₁
Λ ⊦ σ₂ = σ₂' : Σ₁ ⇒ Σ₂
---------------------------------
Λ ⊦ (σ₂ ∘ σ₁) = (σ₂' ∘ σ₁') : Σ₀ ⇒ Σ₂

Λ Σ Γ ⊦ A type
---------------------
Λ ⊦ ↑ : Σ (Γ ⊦ A) ⇒ Σ

Λ Σ Γ ⊦ A type
Λ Σ Γ ⊦ a : A
---------------------
Λ ⊦ ↑ : Σ (Γ ⊦ a : A) ⇒ Σ

Λ ⊦ Σ sig
-----------------
Λ ⊦ · : Σ ⇒ ε

Λ ⊦ σ = σ' : Σ₀ ⇒ Σ₁
Λ Σ₁ Γ ⊦ A type
Λ Σ₀ Γ[σ] ⊦ t₀ = t₁ : A[σ]
----------------------------------------
Λ Σ ⊦ (σ, t₀) = (σ', t₁) : Σ₀ ⇒ Σ₁ (Γ ⊦ A)

Λ ⊦ σ ∘ id = σ : Σ₀ ⇒ Σ₁

Λ ⊦ id ∘ σ = σ : Σ₀ ⇒ Σ₁

Λ ⊦ (σ', t) ∘ σ = (σ' ∘ σ, t[σ]) : Σ₀ ⇒ (Σ₁ (Γ ⊦ A))

Λ ⊦ ↑ ∘ (σ, t) = σ : Σ₀ ⇒ Σ₁

Λ ⊦ Σ₀ = Σ₀' ctx
Λ ⊦ Σ₁ = Σ₁' ctx
Λ ⊦ δ : Σ₀ ⇒ Σ₁
-----------------
Λ ⊦ δ : Σ₀' ⇒ Σ₁'

///////// Context Substitution //////////

Λ Σ ⊦ δ₀ = δ₁ : Γ ⇒ Δ
-------------------
Λ Σ ⊦ δ₁ = δ₀ : Γ ⇒ Δ

Λ Σ ⊦ δ₀ = δ₁ : Γ ⇒ Δ
Λ Σ ⊦ δ₁ = δ₂ : Γ ⇒ Δ
-------------------
Λ Σ ⊦ δ₀ = δ₂ : Γ ⇒ Δ

Λ Σ ⊦ Γ ctx
--------------
Λ Σ ⊦ id : Γ ⇒ Γ

Λ Σ ⊦ δ₀ = δ₁ : Γ ⇒ Δ
Λ Σ ⊦ ξ₀ = ξ₁ : Δ ⇒ Ξ
---------------------------------
Λ Σ ⊦ (ξ₀ ∘ γ₀) = (ξ₁ ∘ γ₁) : Γ ⇒ Ξ

Λ Σ Γ ⊦ A type
-------------------
Λ Σ ⊦ ↑ : (Γ ᐅ A) ⇒ Γ

Λ Σ ⊦ Γ ctx
-----------------
Λ Σ ⊦ · : Γ ⇒ ε

Λ Σ ⊦ δ₀ = δ₁ : Γ ⇒ Δ
Λ Σ Δ ⊦ A type
Λ Σ Γ ⊦ t₀ = t₁ : A
-------------------------------------
Λ Σ ⊦ (δ₀, t₀) = (δ₁, t₁) : Γ ⇒ (Δ ᐅ A)

Λ Σ₁ ⊦ γ ⊦ Γ ⇒ Δ
Λ ⊦ σ : Σ₀ ⇒ Σ₁
-----------------------
Λ Σ₀ ⊦ γ[σ] : Γ[σ] ⇒ Δ[σ]

Λ Σ ⊦ δ ∘ id = δ : Γ ⇒ Δ

Λ Σ ⊦ id ∘ δ = δ : Γ ⇒ Δ

Λ Σ ⊦ (ξ, t) ∘ δ = (ξ ∘ δ, t[δ]) : Γ ⇒ (Ξ ᐅ A)

Λ Σ ⊦ ↑ ∘ (δ, t) = δ : Γ ⇒ Δ

Λ Σ ⊦ Γ₀ = Γ₁ ctx
Λ Σ ⊦ Δ₀ = Δ₁ ctx
Λ Σ ⊦ δ : Γ₀ ⇒ Δ₀
---------------
Λ Σ ⊦ δ : Γ₁ ⇒ Δ₁
